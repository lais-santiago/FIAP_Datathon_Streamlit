import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import dashboard as dash

def show_report(df):
    st.title("üìÑ Relat√≥rio Anal√≠tico")

    st.header("1Ô∏è‚É£ Introdu√ß√£o")
    st.write("""
    A ONG Passos M√°gicos atua na transforma√ß√£o social atrav√©s da educa√ß√£o, atendendo crian√ßas e jovens em situa√ß√£o de vulnerabilidade.
    Este relat√≥rio apresenta os impactos do projeto entre os anos de 2022, 2023 e 2024.
    """)

    st.header("2Ô∏è‚É£ Metodologia")
    st.write("""
    Os dados passaram por limpeza, padroniza√ß√£o e cria√ß√£o de novas vari√°veis. Foram feitas an√°lises descritivas e preditivas para entender os fatores que impactam o sucesso dos alunos.
             
    """)

    st.header("3Ô∏è‚É£ An√°lises Realizadas")

    df_2022 = df[df["ano"] == 2022]
    df_2023 = df[df["ano"] == 2023]
    df_2024 = df[df["ano"] == 2024]

    analise_descritiva(df_2022, 2022)
    analise_descritiva(df_2023, 2023)
    analise_descritiva(df_2024, 2024)

    anos = np.array([2022, 2023, 2024])
    
    st.subheader("üìä Evolu√ß√£o dos Indicadores  (2022-2024)")
    fig, ax = plt.subplots(figsize=(10, 4))
    sns.lineplot(data=df, x="ano", y="inde", label="INDE", marker="o")
    ax.set_xticks(anos)
    plt.legend(loc='lower left')
    plt.xlabel("Ano")
    plt.ylabel("Pontua√ß√£o M√©dia")
    plt.title("Evolu√ß√£o do √çndice de Desenvolvimento Educacional (INDE)")
    st.pyplot(fig)

    st.write("A m√©dia de valores INDE ao longo dos anos de 2022 a 2024 sofreu uma queda gradativa, mas n√£o muito acentuada com o passar dos anos.")

    fig, ax = plt.subplots(figsize=(10, 4))
    sns.lineplot(data=df, x="ano", y="ian", label="IAN", marker="o")
    sns.lineplot(data=df, x="ano", y="ida", label="IDA", marker="o")
    sns.lineplot(data=df, x="ano", y="ieg", label="IEG", marker="o")
    ax.set_xticks(anos)
    plt.legend(loc='best')
    plt.xlabel("Ano")
    plt.ylabel("Pontua√ß√£o M√©dia")
    plt.title("Evolu√ß√£o dos Indicadores de Dimens√£o Acad√™mica")
    st.pyplot(fig)

    st.write("A pontua√ß√£o m√©dia dos indicadores de dimens√£o acad√™mica IAN (Indicador de Adequa√ß√£o de N√≠vel), IDA (Indicador de Desempenho Acad√™mico) e IEG (Indicador de Engajamento), tamb√©m sofreu altera√ß√£o ao longo dos anos, mas com comportamento diferente do indicador geral INDE. \n\nA m√©dia de pontua√ß√£o do indicador IAN foi a √∫nica que n√£o sofreu nenhuma queda ao longo dos anos analisados. \n\n J√° a m√©dia de pontua√ß√µes dos indicadores IDA e IEG, tiveram comportamentos similares entre si, onde tiveram um leve aumento do ano de 2022 a 2023, mas seguido de queda no ano de 2024.")

    fig, ax = plt.subplots(figsize=(10, 4))
    sns.lineplot(data=df, x="ano", y="iaa", label="IAA", marker="o")
    sns.lineplot(data=df, x="ano", y="ips", label="IPS", marker="o")
    ax.set_xticks(anos)
    plt.legend(loc='best')
    plt.xlabel("Ano")
    plt.ylabel("Pontua√ß√£o M√©dia")
    plt.title("Evolu√ß√£o dos Indicadores de Dimens√£o Psicossocial")
    st.pyplot(fig)

    st.write("A pontua√ß√£o m√©dia dos indicadores de dimens√£o psicossocial IAA (Indicador de Autoavalia√ß√£o) e IPS (Indicador Psicossocial) tiveram comportamentos similares entre si, com uma queda de aproximadamente 2 pontos de 2022 a 2023, mas seguida de recupera√ß√£o de aproximadamente 1,5 ponto de 2023 a 2024.")

    fig, ax = plt.subplots(figsize=(10, 4))
    sns.lineplot(data=df, x="ano", y="ipp", label="IPP", marker="o")
    sns.lineplot(data=df, x="ano", y="ipv", label="IPV", marker="o")
    ax.set_xticks(anos)
    plt.legend(loc='best')
    plt.xlabel("Ano")
    plt.ylabel("Pontua√ß√£o M√©dia")
    plt.title("Evolu√ß√£o dos Indicadores de Dimens√£o Psicopedag√≥gica")
    st.pyplot(fig)

    st.write("O comportamento da m√©dia dos indicadores de dimens√£o psicopedag√≥gica IPP (Indicador Psicopedag√≥gico) e IPV (Indicador de Ponto de Virada) foi de aumento do ano de 2022 a 2023, seguido de queda de 2023 a 2024, mas com magnitudes diferentes. \n\n Enquanto que o IPV teve um aumento bastante discreto de 2022 a 2023, sua queda de 2023 a 2024 foi mais acentuada, o indicador IPP teve um aumento significativo de 2022 a 2023, mas seguido de uma queda de 2023 a 2024 mais discreta.")

    qtd_alunos_ano(df)

    st.subheader("üìä Perfil dos alunos Top√°zio")

     # An√°lise do perfil dos alunos top√°zio
    st.subheader(f"üîπ Perfil dos Alunos Top√°zio de 2022 a 2024")

    df_topazio = df[df['pedra'] == 'topazio']

    indicadores = ["inde", "ian", "ida", "ieg", "iaa", "ips", "ipp", "ipv"]

    # Calculando m√©dias
    media_topazio = df_topazio[indicadores].mean()
    media_geral = df[indicadores].mean()

    # Criando um gr√°fico de radar
    labels = indicadores
    num_vars = len(labels)

    angles = np.linspace(0,2 * np.pi, num_vars, endpoint=False).tolist()
    media_topazio = np.concatenate((media_topazio, [media_topazio[0]]))
    media_geral = np.concatenate((media_geral, [media_geral[0]]))
    angles += angles[:1]

    col1, col2 = st.columns(2)
    
    with col1: 
        fig, ax = plt.subplots(figsize=(8, 8), subplot_kw=dict(polar=True))
        ax.fill(angles, media_topazio, color="blue", alpha=0.4, label="Top√°zio")
        ax.fill(angles, media_geral, color="yellow", alpha=0.4, label="M√©dia Geral")

        ax.set_yticklabels([])
        ax.set_xticks(angles[:-1])
        ax.set_xticklabels(labels)

        plt.title(f"Perfil dos Alunos Top√°zio vs M√©dia Geral de 2022 a 2024")
        plt.legend(loc='lower left')
        st.pyplot(fig)

    with col2:
        st.write("Os alunos de perfil Top√°zio tiveram a m√©dia de indicadores no geral aumentada em rela√ß√£o aos alunos de outros perfis, mas com deatque para os indicadores IAA, IEG, IDA e IAN, que tiveram valores com diferen√ßa maior em rela√ß√£o aos respectivos indicadores nas outras categorias de alunos.")


    st.subheader("üìä An√°lise de correla√ß√£o dos indicadores, ponto de virada e bolsa")

    # Definir as colunas de indicadores
    indicadores = ["atingiu_ponto_virada", "inde", "ian", "ida", "ieg", "iaa", "ips", "ipp", "ipv", "indicado_bolsa"]

    # Calcular a matriz de correla√ß√£o
    correlacao = df[indicadores].corr()

    col1, col2 = st.columns(2)
    
    with col1:
        # Criar o gr√°fico de calor (heatmap)
        fig, ax = plt.subplots(figsize=(8, 6))
        sns.heatmap(correlacao, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5, ax=ax)

        plt.title("Mapa de Calor das Correla√ß√µes entre Indicadores e Ponto de Virada")

        st.pyplot(fig)

    with col2: 
        st.write("De acordo com o mapa de calor, nenhum dos indicadores teve correla√ß√£o relevante com o fato dos alunos atingirem ou n√£o o ponto de virada, assim como ser indicado para bolsa ou n√£o, no per√≠odo analisado, de 2022 a 2024. \n\nJ√° os indicadores ida, ieg, ipp e ipv demonstraram forte rela√ß√£o com o indicador de desempenho INDE.")

    st.subheader("üîç Identifica√ß√£o de Outliers")

    df["instituicao"] = df.apply(
    lambda row: "publica" if row["instituicao_publica"] == 1 else 
                "privada" if row["instituicao_privada"] == 1 else 
                "nao informado", axis=1
    )

    col1, col2 = st.columns(2)

    with col1:
        # Criando um boxplot para visualizar outliers de INDE por g√™nero
        fig, ax = plt.subplots(figsize=(6, 4))
        sns.boxplot(data=df, x="genero", y="inde", ax=ax, palette="rocket")

        plt.xlabel("G√™nero")
        plt.ylabel("INDE")
        plt.title("Distribui√ß√£o de Outliers de INDE por G√™nero")

        # Exibir no Streamlit
        st.pyplot(fig)

        # Criando um boxplot para visualizar outliers de INDE nos alunos que atingiram ou n√£o ponto de virada
        fig, ax = plt.subplots(figsize=(6, 4))
        sns.boxplot(data=df, x="atingiu_ponto_virada", y="inde", ax=ax, palette="coolwarm")

        # Ajustando os r√≥tulos do eixo x
        ax.set_xticklabels(["N√£o", "Sim"])
        plt.xlabel("Atingiu Ponto Virada")
        plt.ylabel("INDE")
        plt.title("Distribui√ß√£o de Outliers de INDE nos alunos que atingiram ou n√£o ponto de virada")

        # Exibir no Streamlit
        st.pyplot(fig)

    with col2:
        # Criando um boxplot para visualizar outliers de INDE por g√™nero
        fig, ax = plt.subplots(figsize=(6, 4))
        sns.boxplot(data=df, x="instituicao", y="inde", ax=ax, palette="viridis")

        plt.xlabel("Tipo institui√ß√£o")
        plt.ylabel("INDE")
        plt.title("Distribui√ß√£o de Outliers de INDE por tipo de institui√ß√£o")

        # Exibir no Streamlit
        st.pyplot(fig)

        st.write("Ao analisar os outliers do indicador INDE por g√™nero √© poss√≠vel identificar que tanto no p√∫blico de alunos do g√™nero feminino, quanto do masculino, a concentra√ß√£o de alunos que tiveram melhor pontua√ß√£o no indicador INDE, ficaram entre 6,5 e 8. Enquanto que alunos que requerem aten√ß√£o, s√£o alunos que ficaram abaixo de 4,5.")
        st.write("Ao analisar os outliers do indicador INDE por institui√ß√£o de ensino, os alunos que frequentam institui√ß√µes p√∫blicas tiveram um comportamento similar ao analisado em rela√ß√£o ao g√™nero. Por√©m nos alunos de institui√ß√£o privada e de institui√ß√µes n√£o informadas os valores ficaram muito mais distribu√≠dos, variando de 1 a 8.")
        st.write("Considerando os alunos que atingiram o ponto de virada, perante os alunos que n√£o atingiram, identificamos que nos que atingiram a concentra√ß√£o de pontua√ß√£o INDE mais altas est√£o concentrados entre 8 e 9, enquanto que os que n√£o atingiram o ponto de virada a pontua√ß√£o fica mais concentrada entre 6 e 8.")

    st.subheader("ü§ñ Predi√ß√£o")

    indicadores_previsao = ["idade", "fase", "iaa", "ieg", "ips", "ida", "ipv", "ian", "ipp"]
    modelo, acuracia = dash.cria_modelo(df, indicadores_previsao)

    acuracia = acuracia * 100

    st.write(f"Para prever o desempenho futuro dos alunos com base em seus indicadores, utilizamos como vari√°veis de an√°lise as colunas idade, fase, iaa, ieg, ips, ida, ipv, ian e ipp. O modelo utilizado foi o Random Forest que atingiu uma acur√°cia de {acuracia:.2f}%.")

    st.header("4Ô∏è‚É£ Conclus√µes e Recomenda√ß√µes")
    st.write("""
    - O percentual de alunos Top√°zio aumentou de forma consistente de 2022 a 2024, acumulando um aumento de 13,11 pontos percentuais do inicio ao fim do per√≠odo analisado (2022 a 2024). 
    - Apesar do INDE ser uma pondera√ß√£o de diversos indicadores, os que mais demonstraram rela√ß√£o com o mesmo foram o IDA, IEG, IPP e IPV. Sugerindo que alunos que tiram notas mais altas em matem√°tica, portugu√™s e ingl√™s, que tem maior engajamento com a entrega de tarefas, que √© promovido de fase e que tem maior desenvolvimento emocional, conseguem maior destaque sendo classificado com INDE maiores.
    - A indica√ß√£o de bolsa n√£o esteve fortemente vinculada a nenhum indicador. Mesmo assim, o que teve correla√ß√£o melhor (0,09) foi o IAN, sugerindo que minimamente os alunos que est√£o na sua fase adequada tem mais chances de obter uma bolsa.
    - O fato de alunos terem ou n√£o atingido o ponto de virada demonstrou-se que est√° medianamente vinculado a indicadores IDA, IEG e IPP. O que sugere que dedicar-se a notas altas nas disciplinas matem√°tica, portugu√™s e ingl√™s, estar engajado com a entrega de tarefas e ser promovido de fase, indicam que h√° mais chances de atingir o ponto de virada.
    - A Passos M√°gicos pode melhorar os programas de acompanhamento para alunos com INDE abaixo de 5.
    """)

    st.markdown("<p style='text-align: right;'>by La√≠s Santiago Ribeiro - RM356012 - Grupo 67</p>", unsafe_allow_html=True)

def analise_descritiva(df, ano):
    # Contagem dos valores √∫nicos na coluna "pedra"
    percentuais_pedra = df["pedra"].value_counts(normalize=True) * 100
    percentual_ponto_virada = df["atingiu_ponto_virada"].value_counts(normalize=True) * 100
    percentual_indicado_bolsa = df["indicado_bolsa"].value_counts(normalize=True) * 100

    st.subheader(f"üìä Descritiva ano {ano}")
    st.write("""
    - __M√©dia INDE__: {:.2f}
    - __Taxa de Atingimento do Ponto de Virada__: {:.2f}%
    - __Percentual de Alunos Indicados para Bolsa__: {:.2f}%
    - __Percentual de Alunos Pedra Quartzo__: {:.2f}%
    - __Percentual de Alunos Pedra √Ågata__: {:.2f}%
    - __Percentual de Alunos Pedra Ametista__: {:.2f}%
    - __Percentual de Alunos Pedra Top√°zio__: {:.2f}%
    """.format(
        df["inde"].mean(),
        percentual_ponto_virada[1],
        percentual_indicado_bolsa[1],
        percentuais_pedra["quartzo"],
        percentuais_pedra["agata"],
        percentuais_pedra["ametista"],
        percentuais_pedra["topazio"]
    ))


def qtd_alunos_ano(df):
    # Contando a quantidade de alunos por ano
    contagem_por_ano = df["ano"].value_counts().sort_index()

    # Criando o gr√°fico de barras
    fig, ax = plt.subplots(figsize=(10, 4))
    sns.barplot(x=contagem_por_ano.index, y=contagem_por_ano.values, ax=ax, palette="viridis")

    plt.xlabel("Ano")
    plt.ylabel("Quantidade de Alunos")
    plt.title("Quantidade de Alunos por Ano")

    ax.set_yticks(np.arange(0, contagem_por_ano.max() + 100, 100))  
    ax.grid(axis='y', linestyle='--', alpha=0.7)  

    # Exibir no Streamlit
    st.pyplot(fig)

